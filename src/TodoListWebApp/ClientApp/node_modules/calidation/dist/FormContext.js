"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withFormContext = exports.FormConsumer = exports.FormProvider = void 0;

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _createContext = /*#__PURE__*/(0, _react.createContext)({}),
    Consumer = _createContext.Consumer,
    Provider = _createContext.Provider;

var FormProvider = Provider;
exports.FormProvider = FormProvider;
var FormConsumer = Consumer;
exports.FormConsumer = FormConsumer;

var withFormContext = function withFormContext(TargetComponent) {
  var WithFormContext = function WithFormContext(props) {
    return /*#__PURE__*/_react["default"].createElement(Consumer, null, function (formContext) {
      return /*#__PURE__*/_react["default"].createElement(TargetComponent, _extends({}, props, formContext));
    });
  };

  var targetName = TargetComponent.displayName || TargetComponent.name;
  WithFormContext.displayName = "withFormContext(".concat(targetName, ")");
  return WithFormContext;
};

exports.withFormContext = withFormContext;