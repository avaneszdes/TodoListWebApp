{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Vladislav Avanesov\\\\RiderProjects\\\\TodoListWebApp\\\\src\\\\TodoListWebApp\\\\ClientApp\\\\src\\\\components\\\\TodoList\\\\ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './ToDoList.css';\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_TODO, EDIT_TODO, COMPLETE_TODO, DELETE_TODO, GET_TODO_LIST } from '../../redux/constants';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport SimpleBackdrop from \"../BackDrop/BackDrop\";\nimport LeftPanel from \"../LeftPanel/LeftPanel\";\nimport Button from \"@material-ui/core/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Hidden, TextField, Toolbar } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  button: {\n    width: '1000px'\n  },\n  input: {\n    width: '915px'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  dialog: {\n    width: '500px'\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nexport default function ToDoList() {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = useState(\"\");\n  const [inputHide, setInputHide] = useState(false);\n  const todos = useSelector(state => state.todos.items);\n  const loading = useSelector(state => state.todos.loading);\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    dispatch({\n      type: GET_TODO_LIST,\n      payload: []\n    });\n  }, [page]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const changeHideInput = () => setInputHide(!inputHide);\n\n  const textChanged = e => setValue(e.target.value);\n\n  const addTodos = text => {\n    if (text !== '') {\n      dispatch({\n        type: ADD_TODO,\n        payload: text\n      });\n      setValue('');\n    }\n\n    setInputHide(!inputHide);\n  };\n\n  const deleteItem = id => {\n    dispatch({\n      type: DELETE_TODO,\n      payload: id\n    });\n  };\n\n  const completeTodo = item => {\n    dispatch({\n      type: COMPLETE_TODO,\n      payload: item\n    });\n  };\n\n  const editItem = item => {\n    dispatch({\n      type: EDIT_TODO,\n      payload: {\n        id: item.id,\n        text: item.text,\n        finished: item.isComplete\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '70px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"absolute\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(LeftPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      only: inputHide ? 'xl' : 'xs',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        onClick: () => changeHideInput(),\n        variant: \"contained\",\n        color: \"primary\",\n        id: \"createItem\",\n        children: \"Create item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '3px'\n      },\n      hidden: !inputHide,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Write todo item text here\",\n        label: \"New Todos\",\n        onChange: textChanged,\n        value: value,\n        className: classes.input,\n        id: \"createItemText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addTodos(value),\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: todos.length,\n        next: () => setPage(page + 1),\n        hasMore: true,\n        loader: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this),\n        endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Yay! You have seen it all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: todos.map((x, index) => /*#__PURE__*/_jsxDEV(TodoItem, {\n            item: x,\n            completeTodo: completeTodo,\n            deleteItem: deleteItem,\n            editItem: editItem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SimpleBackdrop, {\n        hidden: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDoList, \"z4PCiUEoCy9aILLS/l/BjLPDyHE=\", false, function () {\n  return [useStyles, useSelector, useSelector, useDispatch];\n});\n\n_c = ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/components/TodoList/ToDoList.tsx"],"names":["React","useState","useEffect","TodoItem","useDispatch","useSelector","ADD_TODO","EDIT_TODO","COMPLETE_TODO","DELETE_TODO","GET_TODO_LIST","InfiniteScroll","SimpleBackdrop","LeftPanel","Button","createStyles","makeStyles","AppBar","Hidden","TextField","Toolbar","useStyles","theme","root","margin","spacing","button","width","input","form","marginTop","dialog","title","flexGrow","ToDoList","classes","value","setValue","inputHide","setInputHide","todos","state","items","loading","dispatch","page","setPage","type","payload","changeHideInput","textChanged","e","target","addTodos","text","deleteItem","id","completeTodo","item","editItem","finished","isComplete","length","textAlign","map","x","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './ToDoList.css';\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\nimport {Item} from '../Interfaces';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_TODO, EDIT_TODO, COMPLETE_TODO, DELETE_TODO, GET_TODO_LIST} from '../../redux/constants';\r\nimport {IRootState} from \"../../redux/configureStore\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport SimpleBackdrop from \"../BackDrop/BackDrop\";\r\nimport LeftPanel from \"../LeftPanel/LeftPanel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {AppBar, Hidden, TextField, Toolbar} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        button: {\r\n            width: '1000px'\r\n        },\r\n        input: {\r\n            width: '915px'\r\n        },\r\n        form: {\r\n            width: '100%',\r\n            marginTop: theme.spacing(1)\r\n        },\r\n        dialog: {\r\n            width: '500px'\r\n        },\r\n\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n\r\n    }),\r\n);\r\n\r\nexport default function ToDoList() {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(\"\")\r\n    const [inputHide, setInputHide] = useState(false)\r\n\r\n    const todos: Item[] = useSelector((state: IRootState) => state.todos.items)\r\n    const loading: boolean = useSelector((state: IRootState) => state.todos.loading)\r\n    const dispatch = useDispatch();\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        dispatch({type: GET_TODO_LIST, payload: []})\r\n    }, [page])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const changeHideInput = () => setInputHide(!inputHide);\r\n    const textChanged = (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value);\r\n    const addTodos = (text: string) => {\r\n        if (text !== '') {\r\n            dispatch({type: ADD_TODO, payload: text})\r\n            setValue('')\r\n        }\r\n        setInputHide(!inputHide);\r\n    }\r\n    const deleteItem = (id: number) => {\r\n        dispatch({type: DELETE_TODO, payload: id})\r\n    }\r\n    const completeTodo = (item: Item) => {\r\n        dispatch({type: COMPLETE_TODO, payload: item})\r\n    }\r\n    const editItem = (item: Item) => {\r\n        dispatch({type: EDIT_TODO, payload: {id: item.id, text: item.text, finished: item.isComplete}})\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop: '70px'}}>\r\n\r\n            <AppBar position=\"absolute\">\r\n                <Toolbar>\r\n                    <LeftPanel/>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Hidden only={inputHide ? 'xl' : 'xs'}>\r\n                <Button\r\n                    className={classes.button}\r\n                    onClick={() => changeHideInput()}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    id='createItem'\r\n                >\r\n\r\n                    Create item \r\n                </Button>\r\n            </Hidden>\r\n\r\n            <div style={{marginTop: '3px'}} hidden={!inputHide}>\r\n                <TextField\r\n                    placeholder=\"Write todo item text here\"\r\n                    label=\"New Todos\"\r\n                    onChange={textChanged}\r\n                    value={value}\r\n                    className={classes.input}\r\n                    id='createItemText'\r\n                />\r\n\r\n                <Button\r\n                    onClick={() => addTodos(value)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Create\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <InfiniteScroll\r\n                    dataLength={todos.length}\r\n                    next={() => setPage(page + 1)}\r\n                    hasMore={true}\r\n                    loader={<br/>}\r\n                    endMessage={\r\n                        <p style={{textAlign: 'center'}}>\r\n                            <b>Yay! You have seen it all</b>\r\n                        </p>\r\n                    }\r\n                >\r\n                    <h1>{todos.map((x: Item, index: number) =>\r\n                        <TodoItem key={index}\r\n                                  item={x}\r\n                                  completeTodo={completeTodo}\r\n                                  deleteItem={deleteItem}\r\n                                  editItem={editItem}\r\n                        />)}\r\n                    </h1>\r\n\r\n                </InfiniteScroll>\r\n                <SimpleBackdrop hidden={loading}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}