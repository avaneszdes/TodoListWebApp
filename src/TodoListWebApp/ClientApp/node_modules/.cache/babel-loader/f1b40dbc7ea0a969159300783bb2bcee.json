{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Vladislav Avanesov\\\\RiderProjects\\\\TodoListWebApp\\\\src\\\\TodoListWebApp\\\\ClientApp\\\\src\\\\components\\\\EmailConfirmation\\\\EmailConfirmation.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ErrorAlertComponent from \"../ErrorAlert/ErrorAlert\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport { CHANGE_USER_PASSWORD } from \"../../redux/constants\";\nimport { ref } from \"yup\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nconst vScheme = yup.object().shape({\n  password: yup.string().min(8, 'length must be most than 7').required('required'),\n  email: yup.string().email('incorrect email address').required('required'),\n  confirmPassword: yup.string().oneOf([ref('password')], 'passwords don`t match').required('required')\n});\nexport default function EmailConfirmation() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      confirmPassword: '',\n      email: ''\n    },\n    validationSchema: vScheme,\n    onSubmit: values => {\n      console.log(window.location.href);\n      const confirmationForm = {\n        EmailAddress: values.email,\n        Password: values.password,\n        GuidId: window.location.href.substring(44, window.location.href.length)\n      };\n      dispatch({\n        type: CHANGE_USER_PASSWORD,\n        payload: confirmationForm\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorAlertComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoFocus: true,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          value: formik.values.email,\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          onChange: formik.handleChange,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          value: formik.values.password,\n          helperText: formik.touched.password && formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          name: \"confirmPassword\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          id: \"confirmPassword\",\n          onChange: formik.handleChange,\n          error: formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword),\n          value: formik.values.confirmPassword,\n          helperText: formik.touched.confirmPassword && formik.errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"signIn\",\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmailConfirmation, \"Lx7EGqnrv/w9SS64iXbserj1Sog=\", false, function () {\n  return [useStyles, useDispatch, useFormik];\n});\n\n_c = EmailConfirmation;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailConfirmation\");","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/components/EmailConfirmation/EmailConfirmation.tsx"],"names":["React","ErrorAlertComponent","CssBaseline","Avatar","LockOutlinedIcon","Typography","TextField","Button","Container","makeStyles","yup","useDispatch","useFormik","CHANGE_USER_PASSWORD","ref","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","vScheme","object","shape","password","string","min","required","email","confirmPassword","oneOf","EmailConfirmation","classes","dispatch","formik","initialValues","validationSchema","onSubmit","values","console","log","window","location","href","confirmationForm","EmailAddress","Password","GuidId","substring","length","type","payload","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport ErrorAlertComponent from \"../ErrorAlert/ErrorAlert\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Slide} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport * as yup from \"yup\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {IRootState} from \"../../redux/configureStore\";\r\nimport {useFormik} from \"formik\";\r\nimport {CHANGE_USER_PASSWORD, CHANGE_USER_PASSWORD_SUCCEED} from \"../../redux/constants\";\r\nimport {ref} from \"yup\";\r\nimport {UpdatePassword} from \"../Interfaces\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst vScheme = yup.object().shape({\r\n    password: yup.string().min(8, 'length must be most than 7').required('required'),\r\n    email: yup.string().email('incorrect email address').required('required'),\r\n    confirmPassword: yup.string().oneOf([ref('password')], 'passwords don`t match').required('required'),\r\n})\r\n\r\nexport default function EmailConfirmation() {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n            confirmPassword: '',\r\n            email: '',\r\n        },\r\n        validationSchema: vScheme,\r\n        onSubmit: (values) => {\r\n            console.log(window.location.href)\r\n            const confirmationForm: UpdatePassword = {EmailAddress: values.email, Password: values.password, GuidId: window.location.href.substring(44,window.location.href.length)}\r\n            dispatch({type: CHANGE_USER_PASSWORD, payload: confirmationForm})\r\n        },\r\n    })\r\n   \r\n   \r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <ErrorAlertComponent/>\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Change Password\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoFocus\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        value={formik.values.email}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        value={formik.values.password}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        type=\"password\"\r\n                        id=\"confirmPassword\"\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\r\n                        value={formik.values.confirmPassword}\r\n                        helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                    />\r\n                    <Button\r\n                        id={\"signIn\"}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Update Password\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}