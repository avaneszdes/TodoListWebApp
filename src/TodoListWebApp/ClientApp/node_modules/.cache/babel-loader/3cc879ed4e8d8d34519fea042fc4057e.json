{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport todos from \"./todos-reducer\";\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootSaga } from '../sagas/root';\nimport auth from \"./auth-reducer\";\nimport users from \"./admin-reducer\";\nimport error from \"./error-reducer\";\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const todoApp = combineReducers({\n    todos,\n    auth,\n    users,\n    error\n  });\n  const store = createStore(todoApp, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n  sagaMiddleware.run(rootSaga);\n  return store;\n}","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/redux/configureStore.ts"],"names":["applyMiddleware","combineReducers","createStore","todos","createSagaMiddleware","composeWithDevTools","rootSaga","auth","users","error","configureStore","sagaMiddleware","todoApp","store","run"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,WAA1C,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,mBAAR,QAAmC,0BAAnC;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AASA,eAAe,SAASC,cAAT,GAA0B;AACrC,QAAMC,cAAc,GAAGP,oBAAoB,EAA3C;AACA,QAAMQ,OAAO,GAAGX,eAAe,CAAC;AAACE,IAAAA,KAAD;AAAQI,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAoBC,IAAAA;AAApB,GAAD,CAA/B;AACA,QAAMI,KAAK,GAAGX,WAAW,CAACU,OAAD,EAAWP,mBAAmB,CAACL,eAAe,CAACW,cAAD,CAAhB,CAA9B,CAAzB;AACAA,EAAAA,cAAc,CAACG,GAAf,CAAmBR,QAAnB;AAEA,SAAOO,KAAP;AACH","sourcesContent":["import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport todos from \"./todos-reducer\";\r\nimport {Auth, User, ITodosState} from \"../Components/Interfaces\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {composeWithDevTools } from 'redux-devtools-extension';\r\nimport {rootSaga} from '../sagas/root';\r\nimport auth from \"./auth-reducer\";\r\nimport users from \"./admin-reducer\";\r\nimport error from \"./error-reducer\";\r\n\r\nexport interface IRootState {\r\n    auth: Auth,\r\n    todos: ITodosState ,\r\n    users: User[],\r\n    error: string,\r\n}\r\n\r\nexport default function configureStore() {\r\n    const sagaMiddleware = createSagaMiddleware()\r\n    const todoApp = combineReducers({todos, auth, users,error})\r\n    const store = createStore(todoApp,  composeWithDevTools(applyMiddleware(sagaMiddleware)))\r\n    sagaMiddleware.run(rootSaga)\r\n    \r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}