{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Vladislav Avanesov\\\\RiderProjects\\\\TodoListWebApp\\\\src\\\\TodoListWebApp\\\\ClientApp\\\\src\\\\components\\\\TodoItem\\\\TodoItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Checkbox, createMuiTheme, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, Divider, FormControlLabel, Paper, Slide, TextField, ThemeProvider, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: '#4df608'\n    },\n    primary: {\n      main: '#f62c08'\n    }\n  }\n});\nconst useStyles = makeStyles(theme => createStyles({\n  childPaper: {\n    padding: '2px 4px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '980px',\n    height: '60px',\n    margin: '3px'\n  },\n  mainPaper: {\n    padding: '2px 4px',\n    alignItems: 'left',\n    width: '990px',\n    height: '85px',\n    marginTop: '6px',\n    backgroundColor: '#dbeeef',\n    borderStyle: 'solid',\n    borderColor: '#b9c6ba'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  divider: {\n    height: 28,\n    width: '4px',\n    margin: 4\n  },\n  button: {\n    width: '55px',\n    marginLeft: '3px'\n  },\n  date: {\n    marginLeft: theme.spacing(0.5),\n    marginTop: theme.spacing(-0.5),\n    width: '130px',\n    fontSize: 12\n  }\n}));\nexport default function TodoItem({\n  item,\n  completeTodo,\n  deleteItem,\n  editItem\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [inputEditHideBtn, setInputEditHideBtn] = useState(false);\n  const [value, setValue] = useState('');\n\n  const handleClose = () => {\n    setInputEditHideBtn(!inputEditHideBtn);\n  };\n\n  const completeTodoItem = item => {\n    completeTodo({\n      id: item.id,\n      text: item.text,\n      isComplete: !item.isComplete,\n      createdDate: item.createdDate\n    });\n  };\n\n  const textChanged = e => setValue(e.target.value);\n\n  const removeItem = item => {\n    deleteItem(item.id);\n  };\n\n  const editedItem = () => {\n    editItem({ ...item,\n      text: value\n    });\n    setInputEditHideBtn(!inputEditHideBtn);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      TransitionComponent: Transition,\n      keepMounted: true,\n      open: inputEditHideBtn,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-title\",\n        children: \"Change todo item text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField // id='qwe'\n        , {\n          placeholder: \"Write new text here\",\n          label: \"Edit Todo\",\n          style: {\n            width: '400px'\n          },\n          onChange: textChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"updateTodoItem\",\n          color: \"primary\",\n          onClick: () => editedItem(),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      className: classes.mainPaper,\n      id: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        component: \"form\",\n        className: classes.childPaper,\n        children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            style: {\n              marginLeft: '10px'\n            },\n            onClick: () => completeTodoItem(item),\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              icon: /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n                color: 'primary'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 68\n              }, this),\n              checkedIcon: /*#__PURE__*/_jsxDEV(Favorite, {\n                color: 'secondary'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 75\n              }, this),\n              name: \"checkedH\",\n              checked: item.isComplete,\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 52\n            }, this),\n            label: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: item.isComplete ? /*#__PURE__*/_jsxDEV(\"s\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 65\n          }, this) : item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.divider,\n            orientation: \"vertical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            onClick: () => removeItem(item),\n            variant: \"contained\",\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: item.id.toString(),\n            className: classes.button,\n            onClick: () => setInputEditHideBtn(!inputEditHideBtn),\n            variant: \"contained\",\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.date,\n        children: item.createdDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoItem, \"swIV5EObAo37FiJlDq3e0JwHe3I=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = TodoItem;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/components/TodoItem/TodoItem.tsx"],"names":["React","useState","Button","Checkbox","createMuiTheme","createStyles","Dialog","DialogActions","DialogContent","DialogTitle","Divider","FormControlLabel","Paper","Slide","TextField","ThemeProvider","Typography","makeStyles","Favorite","FavoriteBorder","DeleteForeverOutlinedIcon","EditIcon","Transition","forwardRef","props","ref","theme","palette","secondary","main","primary","useStyles","childPaper","padding","display","justifyContent","alignItems","width","height","margin","mainPaper","marginTop","backgroundColor","borderStyle","borderColor","input","marginLeft","spacing","flex","divider","button","date","fontSize","TodoItem","item","completeTodo","deleteItem","editItem","classes","inputEditHideBtn","setInputEditHideBtn","value","setValue","handleClose","completeTodoItem","id","text","isComplete","createdDate","textChanged","e","target","removeItem","editedItem","toString"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Item} from '../Interfaces';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n    Checkbox, createMuiTheme,\r\n    createStyles,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle, Divider, FormControlLabel,\r\n    Paper,\r\n    Slide,\r\n    TextField, ThemeProvider, Typography,\r\n} from \"@material-ui/core\";\r\nimport {TransitionProps} from '@material-ui/core/transitions';\r\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {Favorite, FavoriteBorder} from \"@material-ui/icons\";\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ninterface Props {\r\n    item: Item,\r\n    completeTodo: (item: Item) => void,\r\n    deleteItem: (id: number) => void,\r\n    editItem: (item: Item) => void,\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: '#4df608',\r\n        },\r\n        primary: {\r\n            main: '#f62c08',\r\n        },\r\n    },\r\n});\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        childPaper: {\r\n            padding: '2px 4px',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '980px',\r\n            height: '60px',\r\n            margin: '3px',\r\n        },\r\n        mainPaper: {\r\n            padding: '2px 4px',\r\n            alignItems: 'left',\r\n            width: '990px',\r\n            height: '85px',\r\n            marginTop: '6px',\r\n            backgroundColor: '#dbeeef',\r\n            borderStyle: 'solid',\r\n            borderColor: '#b9c6ba',\r\n        },\r\n        input: {\r\n            marginLeft: theme.spacing(1),\r\n            flex: 1,\r\n        },\r\n\r\n        divider: {\r\n            height: 28,\r\n            width: '4px',\r\n            margin: 4,\r\n        },\r\n        button: {\r\n            width: '55px',\r\n            marginLeft: '3px',\r\n\r\n        },\r\n\r\n        date: {\r\n            marginLeft: theme.spacing(0.5),\r\n            marginTop: theme.spacing(-0.5),\r\n            width: '130px',\r\n            fontSize: 12\r\n\r\n        },\r\n\r\n    }),\r\n);\r\nexport default function TodoItem({item, completeTodo, deleteItem, editItem}: Props) {\r\n    const classes = useStyles();\r\n    const [inputEditHideBtn, setInputEditHideBtn] = useState(false)\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleClose = () => {\r\n        setInputEditHideBtn(!inputEditHideBtn);\r\n    }\r\n    const completeTodoItem = (item: Item) => {\r\n        completeTodo(\r\n            {\r\n                id: item.id,\r\n                text: item.text,\r\n                isComplete: !item.isComplete,\r\n                createdDate: item.createdDate\r\n            });\r\n    }\r\n    const textChanged = (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value)\r\n    const removeItem = (item: Item) => {\r\n        deleteItem(item.id);\r\n    }\r\n    const editedItem = () => {\r\n        editItem({...item, text: value});\r\n        setInputEditHideBtn(!inputEditHideBtn);\r\n    }\r\n    return (\r\n        <>\r\n            <Dialog TransitionComponent={Transition}\r\n                    keepMounted\r\n                    open={inputEditHideBtn}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-title\"\r\n            >\r\n                <DialogTitle id=\"form-title\">Change todo item text</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        // id='qwe'\r\n                        placeholder=\"Write new text here\"\r\n                        label=\"Edit Todo\"\r\n                        style={{width: '400px'}}\r\n                        onChange={textChanged}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        id=\"updateTodoItem\"\r\n                        color='primary'\r\n                        onClick={() => editedItem()}\r\n                    >\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleClose}\r\n                        color='primary'\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Paper component=\"form\" className={classes.mainPaper} id='paper'>\r\n                <Paper component=\"form\" className={classes.childPaper}>\r\n                    <ThemeProvider theme={theme}>\r\n                        <FormControlLabel style={{marginLeft: '10px'}}\r\n                                          onClick={() => completeTodoItem(item)}\r\n                                          control={<Checkbox icon={<FavoriteBorder color={'primary'}/>}\r\n                                                             checkedIcon={<Favorite color={'secondary'}/>}\r\n                                                             name=\"checkedH\"\r\n                                                             checked={item.isComplete}\r\n                                                             onChange={() => {\r\n                                                             }}/>}\r\n                                          label=\"\"\r\n                        />\r\n                    </ThemeProvider>\r\n                    <Typography variant=\"h5\">{item.isComplete ? <s>{item.text}</s> : item.text}</Typography>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Divider className={classes.divider} orientation=\"vertical\"/>\r\n                        <Button\r\n                            className={classes.button}\r\n                            onClick={() => removeItem(item)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            <DeleteForeverOutlinedIcon/>\r\n                        </Button>\r\n\r\n                        <Button\r\n                            id={item.id.toString()}\r\n                            className={classes.button}\r\n                            onClick={() => setInputEditHideBtn(!inputEditHideBtn)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            <EditIcon/>\r\n                        </Button>\r\n                    </div>\r\n\r\n                </Paper>\r\n                <Typography className={classes.date}>{item.createdDate}</Typography>\r\n            </Paper>\r\n\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}