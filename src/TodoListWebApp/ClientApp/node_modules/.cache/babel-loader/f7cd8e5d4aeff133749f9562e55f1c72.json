{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { EDIT_TODO } from \"../../redux/constants\";\nimport httpRequest from \"../httpConfig\";\n\nfunction* editTodoWorker(action) {\n  const httpConfig = {\n    method: 'PUT',\n    url: '/api/todoList',\n    data: {\n      id: action.payload.id,\n      text: action.payload.text,\n      isComplete: action.payload.isComplete\n    }\n  };\n  const response = yield call(() => httpRequest(httpConfig));\n\n  if (response.statusCode === 200) {\n    yield put({\n      type: action.payload,\n      payload: action.payload\n    });\n  }\n}\n\nexport function* watchEditTodo() {\n  yield takeEvery(EDIT_TODO, editTodoWorker);\n}","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/sagas/TodoListSagas/EditTodo.ts"],"names":["call","put","takeEvery","EDIT_TODO","httpRequest","editTodoWorker","action","httpConfig","method","url","data","id","payload","text","isComplete","response","statusCode","type","watchEditTodo"],"mappings":"AACA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;AAEA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,UAAUC,cAAV,CAAyBC,MAAzB,EAAuD;AACnD,QAAMC,UAA8B,GAAG;AACnCC,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,GAAG,EAAE,eAF8B;AAGnCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAEL,MAAM,CAACM,OAAP,CAAeD,EADjB;AAEFE,MAAAA,IAAI,EAAEP,MAAM,CAACM,OAAP,CAAeC,IAFnB;AAGFC,MAAAA,UAAU,EAAER,MAAM,CAACM,OAAP,CAAeE;AAHzB;AAH6B,GAAvC;AAUA,QAAMC,QAAQ,GAAG,MAAMf,IAAI,CAAC,MAAMI,WAAW,CAACG,UAAD,CAAlB,CAA3B;;AACA,MAAGQ,QAAQ,CAACC,UAAT,KAAwB,GAA3B,EAA+B;AAC3B,UAAMf,GAAG,CAAC;AAACgB,MAAAA,IAAI,EAAEX,MAAM,CAACM,OAAd;AAAuBA,MAAAA,OAAO,EAAEN,MAAM,CAACM;AAAvC,KAAD,CAAT;AACH;AACJ;;AAGD,OAAO,UAAUM,aAAV,GAAyB;AAC5B,QAAMhB,SAAS,CAACC,SAAD,EAAYE,cAAZ,CAAf;AACH","sourcesContent":["import {EditTodoSucceedAction} from \"../../redux/action\";\r\nimport {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport {AxiosRequestConfig} from \"axios\";\r\nimport {EDIT_TODO} from \"../../redux/constants\";\r\nimport httpRequest from \"../httpConfig\";\r\n\r\nfunction* editTodoWorker(action: EditTodoSucceedAction){\r\n    const httpConfig: AxiosRequestConfig = {\r\n        method: 'PUT',\r\n        url: '/api/todoList',\r\n        data: {\r\n            id: action.payload.id,\r\n            text: action.payload.text,\r\n            isComplete: action.payload.isComplete\r\n        }\r\n    }\r\n\r\n    const response = yield call(() => httpRequest(httpConfig));\r\n    if(response.statusCode === 200){\r\n        yield put({type: action.payload, payload: action.payload})\r\n    }\r\n}\r\n\r\n\r\nexport function* watchEditTodo(){\r\n    yield takeEvery(EDIT_TODO, editTodoWorker)\r\n}"]},"metadata":{},"sourceType":"module"}