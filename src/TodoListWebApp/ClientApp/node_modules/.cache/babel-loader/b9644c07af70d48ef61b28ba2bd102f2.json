{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Vladislav Avanesov\\\\RiderProjects\\\\TodoListWebApp\\\\src\\\\TodoListWebApp\\\\ClientApp\\\\src\\\\components\\\\Autorization\\\\SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AUTHORIZATION, SEND_USER_PASSWORD } from \"../../redux/constants\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport SimpleBackdrop from \"../BackDrop/BackDrop\";\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Slide } from \"@material-ui/core\";\nimport ErrorAlertComponent from \"../ErrorAlert/ErrorAlert\";\n\nfunction Copyright() {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    children: ['Copyright Â© ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://material-ui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), ' ', new Date().getFullYear(), '.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Copyright;\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nconst vScheme = yup.object().shape({\n  password: yup.string().min(8, 'length must be most than 7').required('required'),\n  email: yup.string().email('incorrect email address').required('required')\n});\nconst Transition = /*#__PURE__*/React.forwardRef(_c2 = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n});\n_c3 = Transition;\nexport default function SignIn() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.todos.loading);\n  const [inputEditHideBtn, setInputEditHideBtn] = useState(false);\n  const [value, setValue] = useState('');\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      password: '',\n      confirmPassword: '',\n      email: ''\n    },\n    validationSchema: vScheme,\n    onSubmit: values => {\n      dispatch({\n        type: AUTHORIZATION,\n        payload: values\n      });\n    }\n  });\n\n  const getPasswordAndEmail = email => {\n    dispatch({\n      type: SEND_USER_PASSWORD,\n      payload: email\n    });\n    setInputEditHideBtn(!inputEditHideBtn);\n  };\n\n  const handleClose = () => {\n    setInputEditHideBtn(!inputEditHideBtn);\n  };\n\n  const textChanged = e => setValue(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorAlertComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          value: formik.values.email,\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          onChange: formik.handleChange,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          value: formik.values.password,\n          helperText: formik.touched.password && formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"signIn\",\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: handleClose,\n              variant: \"body2\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/signUp\",\n              variant: \"body2\",\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        TransitionComponent: Transition,\n        keepMounted: true,\n        open: inputEditHideBtn,\n        onClose: handleClose,\n        \"aria-labelledby\": \"form-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-title\",\n          children: \"Sending your password to email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Write your email\",\n            label: \"Email address\",\n            style: {\n              width: '400px'\n            },\n            onChange: textChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => getPasswordAndEmail(value),\n            children: \"Send password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SimpleBackdrop, {\n        hidden: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 8,\n      children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"VsjtV9Jz6XQYjfDvu2W3fKeC8mU=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useFormik];\n});\n\n_c4 = SignIn;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"Transition$React.forwardRef\");\n$RefreshReg$(_c3, \"Transition\");\n$RefreshReg$(_c4, \"SignIn\");","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/components/Autorization/SignIn.tsx"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","useDispatch","useSelector","AUTHORIZATION","SEND_USER_PASSWORD","useFormik","yup","SimpleBackdrop","Dialog","DialogActions","DialogContent","DialogTitle","Slide","ErrorAlertComponent","Copyright","Date","getFullYear","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","vScheme","object","shape","password","string","min","required","email","Transition","forwardRef","props","ref","SignIn","classes","dispatch","loading","state","todos","inputEditHideBtn","setInputEditHideBtn","value","setValue","formik","initialValues","firstName","lastName","confirmPassword","validationSchema","onSubmit","values","type","payload","getPasswordAndEmail","handleClose","textChanged","e","target","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AUTHORIZATION, SEND_USER_PASSWORD} from \"../../redux/constants\";\r\nimport {useFormik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SimpleBackdrop from \"../BackDrop/BackDrop\";\r\nimport {IRootState} from \"../../redux/configureStore\";\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, Slide} from \"@material-ui/core\";\r\nimport {TransitionProps} from \"@material-ui/core/transitions\";\r\nimport ErrorAlertComponent from \"../ErrorAlert/ErrorAlert\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst vScheme = yup.object().shape({\r\n    password: yup.string().min(8, 'length must be most than 7').required('required'),\r\n    email: yup.string().email('incorrect email address').required('required'),\r\n})\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const loading: boolean = useSelector((state: IRootState) => state.todos.loading)\r\n    const [inputEditHideBtn, setInputEditHideBtn] = useState(false)\r\n    const [value, setValue] = useState('')\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            email: '',\r\n        },\r\n        validationSchema: vScheme,\r\n        onSubmit: (values) => {\r\n            dispatch({type: AUTHORIZATION, payload: values})\r\n        },\r\n    })\r\n\r\n    const getPasswordAndEmail = (email: string) => {\r\n        dispatch({type: SEND_USER_PASSWORD, payload: email})\r\n        setInputEditHideBtn(!inputEditHideBtn);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setInputEditHideBtn(!inputEditHideBtn);\r\n    }\r\n\r\n    const textChanged = (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value)\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <ErrorAlertComponent/>\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        value={formik.values.email}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        value={formik.values.password}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n                    <Button\r\n                        id={\"signIn\"}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" onClick={handleClose} variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"/signUp\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                \r\n                <Dialog TransitionComponent={Transition}\r\n                        keepMounted\r\n                        open={inputEditHideBtn}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"form-title\"\r\n                >\r\n                    <DialogTitle id=\"form-title\">Sending your password to email</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            placeholder=\"Write your email\"\r\n                            label=\"Email address\"\r\n                            style={{width: '400px'}}\r\n                            onChange={textChanged}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={() => getPasswordAndEmail(value)}\r\n                        >\r\n                            Send password\r\n                        </Button>\r\n                        <Button\r\n                            onClick={handleClose}\r\n                            color='primary'\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <SimpleBackdrop hidden={loading}/>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright/>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}