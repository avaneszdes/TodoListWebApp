{"ast":null,"code":"import { createTodoSucceed } from \"../../redux/action\";\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { ADD_TODO } from \"../../redux/constants\";\nimport httpRequest from \"../httpConfig\";\n\nfunction* addTodoWorker(action) {\n  const httpConfig = {\n    method: 'POST',\n    url: '/api/todoList',\n    data: {\n      text: action.payload,\n      finished: false\n    }\n  };\n  const response = yield call(() => httpRequest(httpConfig));\n  const createdDate = new Date(response.data.createdDate).toLocaleDateString() + ' ' + new Date(response.data.createdDate).toLocaleTimeString();\n  const addTodoSucceedAction = createTodoSucceed(response.data.id, action.payload, false, createdDate);\n  yield put(addTodoSucceedAction);\n}\n\nexport function* watchAddTodo() {\n  yield takeEvery(ADD_TODO, addTodoWorker);\n}","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/sagas/TodoListSagas/AddTodo.ts"],"names":["createTodoSucceed","call","put","takeEvery","ADD_TODO","httpRequest","addTodoWorker","action","httpConfig","method","url","data","text","payload","finished","response","createdDate","Date","toLocaleDateString","toLocaleTimeString","addTodoSucceedAction","id","watchAddTodo"],"mappings":"AAAA,SAAuBA,iBAAvB,QAA+C,oBAA/C;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;AAEA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,UAAUC,aAAV,CAAwBC,MAAxB,EAA+C;AAE3C,QAAMC,UAA8B,GAAG;AACnCC,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,GAAG,EAAE,eAF8B;AAGnCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAEL,MAAM,CAACM,OADX;AAEFC,MAAAA,QAAQ,EAAE;AAFR;AAH6B,GAAvC;AASA,QAAMC,QAAwB,GAAG,MAAMd,IAAI,CAAC,MAAMI,WAAW,CAACG,UAAD,CAAlB,CAA3C;AACA,QAAMQ,WAAW,GAAI,IAAIC,IAAJ,CAASF,QAAQ,CAACJ,IAAT,CAAcK,WAAvB,EAAoCE,kBAApC,KAA2D,GAA3D,GAAiE,IAAID,IAAJ,CAASF,QAAQ,CAACJ,IAAT,CAAcK,WAAvB,EAAoCG,kBAApC,EAAtF;AACA,QAAMC,oBAAoB,GAAGpB,iBAAiB,CAACe,QAAQ,CAACJ,IAAT,CAAcU,EAAf,EAAmBd,MAAM,CAACM,OAA1B,EAAmC,KAAnC,EAAyCG,WAAzC,CAA9C;AACA,QAAMd,GAAG,CAACkB,oBAAD,CAAT;AACH;;AAED,OAAO,UAAUE,YAAV,GAAyB;AAC5B,QAAMnB,SAAS,CAACC,QAAD,EAAWE,aAAX,CAAf;AACH","sourcesContent":["import {AddTodoAction, createTodoSucceed} from \"../../redux/action\";\r\nimport {call, put, takeEvery} from 'redux-saga/effects'\r\nimport {AxiosRequestConfig, AxiosResponse} from 'axios';\r\nimport {ADD_TODO} from \"../../redux/constants\";\r\nimport httpRequest from \"../httpConfig\";\r\n\r\nfunction* addTodoWorker(action: AddTodoAction) {\r\n\r\n    const httpConfig: AxiosRequestConfig = {\r\n        method: 'POST',\r\n        url: '/api/todoList',\r\n        data: {\r\n            text: action.payload,\r\n            finished: false,\r\n        }\r\n    }\r\n\r\n    const response : AxiosResponse = yield call(() => httpRequest(httpConfig));\r\n    const createdDate =  new Date(response.data.createdDate).toLocaleDateString() + ' ' + new Date(response.data.createdDate).toLocaleTimeString()\r\n    const addTodoSucceedAction = createTodoSucceed(response.data.id, action.payload, false,createdDate);\r\n    yield put(addTodoSucceedAction)\r\n}\r\n\r\nexport function* watchAddTodo() {\r\n    yield takeEvery(ADD_TODO, addTodoWorker)\r\n} "]},"metadata":{},"sourceType":"module"}