{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { EDIT_USER } from '../../redux/constants';\nimport httpRequest from \"../httpConfig\";\n\nfunction* editUserWorker(action) {\n  const httpConfig = {\n    method: 'PUT',\n    url: '/api/user',\n    data: {\n      id: action.payload.id,\n      firstName: action.payload.firstName,\n      lastName: action.payload.lastName,\n      email: action.payload.email,\n      role: action.payload.role,\n      photo: action.payload.photo\n    }\n  };\n  const response = yield call(() => httpRequest(httpConfig));\n\n  if (response.statusCode === 200) {\n    yield put({\n      type: action.type,\n      payload: action.payload\n    });\n  }\n}\n\nexport function* watchEditUser() {\n  yield takeEvery(EDIT_USER, editUserWorker);\n}","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/sagas/UserSagas/EditUser.ts"],"names":["call","put","takeEvery","EDIT_USER","httpRequest","editUserWorker","action","httpConfig","method","url","data","id","payload","firstName","lastName","email","role","photo","response","statusCode","type","watchEditUser"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;AAEA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,UAAUC,cAAV,CAAyBC,MAAzB,EAAuD;AAEnD,QAAMC,UAA8B,GAAG;AACnCC,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,GAAG,EAAE,WAF8B;AAGnCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAEL,MAAM,CAACM,OAAP,CAAeD,EADjB;AAEFE,MAAAA,SAAS,EAAEP,MAAM,CAACM,OAAP,CAAeC,SAFxB;AAGFC,MAAAA,QAAQ,EAAER,MAAM,CAACM,OAAP,CAAeE,QAHvB;AAIFC,MAAAA,KAAK,EAAET,MAAM,CAACM,OAAP,CAAeG,KAJpB;AAKFC,MAAAA,IAAI,EAAEV,MAAM,CAACM,OAAP,CAAeI,IALnB;AAMFC,MAAAA,KAAK,EAAEX,MAAM,CAACM,OAAP,CAAeK;AANpB;AAH6B,GAAvC;AAaA,QAAMC,QAAQ,GAAG,MAAMlB,IAAI,CAAC,MAAMI,WAAW,CAACG,UAAD,CAAlB,CAA3B;;AACA,MAAGW,QAAQ,CAACC,UAAT,KAAwB,GAA3B,EAA+B;AAC3B,UAAMlB,GAAG,CAAC;AAACmB,MAAAA,IAAI,EAAEd,MAAM,CAACc,IAAd;AAAoBR,MAAAA,OAAO,EAAEN,MAAM,CAACM;AAApC,KAAD,CAAT;AACH;AACJ;;AAGD,OAAO,UAAUS,aAAV,GAAyB;AAC5B,QAAMnB,SAAS,CAACC,SAAD,EAAYE,cAAZ,CAAf;AACH","sourcesContent":["import {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport {AxiosRequestConfig} from \"axios\";\r\nimport {EDIT_USER} from '../../redux/constants';\r\nimport httpRequest from \"../httpConfig\";\r\nimport {EditUserSucceedAction} from \"../../redux/action\";\r\n\r\nfunction* editUserWorker(action: EditUserSucceedAction){\r\n   \r\n    const httpConfig: AxiosRequestConfig = {\r\n        method: 'PUT',\r\n        url: '/api/user',\r\n        data: {\r\n            id: action.payload.id,\r\n            firstName: action.payload.firstName,\r\n            lastName: action.payload.lastName,\r\n            email: action.payload.email,\r\n            role: action.payload.role,\r\n            photo: action.payload.photo,\r\n        }\r\n    }\r\n\r\n    const response = yield call(() => httpRequest(httpConfig));\r\n    if(response.statusCode === 200){\r\n        yield put({type: action.type, payload: action.payload})\r\n    }\r\n}\r\n\r\n\r\nexport function* watchEditUser(){\r\n    yield takeEvery(EDIT_USER, editUserWorker)\r\n}"]},"metadata":{},"sourceType":"module"}