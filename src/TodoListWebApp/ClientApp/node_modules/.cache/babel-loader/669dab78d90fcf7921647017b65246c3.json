{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { DELETE_TODO, DELETE_TODO_SUCCEED } from \"../../redux/constants\";\nimport httpRequest from \"../httpConfig\";\n\nfunction* deleteTodoWorker(action) {\n  const httpConfig = {\n    method: 'DELETE',\n    url: `/api/todoList/${action.payload}`\n  };\n  const response = yield call(() => httpRequest(httpConfig));\n\n  if (response.status === 200) {\n    yield put({\n      type: DELETE_TODO_SUCCEED,\n      payload: action.payload\n    });\n  }\n}\n\nexport function* watchDeleteTodo() {\n  yield takeEvery(DELETE_TODO, deleteTodoWorker);\n}","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/sagas/TodoListSagas/DeleteTodo.ts"],"names":["call","put","takeEvery","DELETE_TODO","DELETE_TODO_SUCCEED","httpRequest","deleteTodoWorker","action","httpConfig","method","url","payload","response","status","type","watchDeleteTodo"],"mappings":"AACA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;AAEA,SAAQC,WAAR,EAAqBC,mBAArB,QAA+C,uBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,UAAUC,gBAAV,CAA2BC,MAA3B,EAAqD;AAEjD,QAAMC,UAA8B,GAAG;AACnCC,IAAAA,MAAM,EAAE,QAD2B;AAEnCC,IAAAA,GAAG,EAAG,iBAAgBH,MAAM,CAACI,OAAQ;AAFF,GAAvC;AAKA,QAAMC,QAAuB,GAAG,MAAMZ,IAAI,CAAC,MAAMK,WAAW,CAACG,UAAD,CAAlB,CAA1C;;AACA,MAAII,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,UAAMZ,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEV,mBADA;AAENO,MAAAA,OAAO,EAAEJ,MAAM,CAACI;AAFV,KAAD,CAAT;AAIH;AACJ;;AAED,OAAO,UAAUI,eAAV,GAA4B;AAC/B,QAAMb,SAAS,CAACC,WAAD,EAAcG,gBAAd,CAAf;AACH","sourcesContent":["import {DeleteTodoAction} from \"../../redux/action\";\r\nimport {call, put, takeEvery} from 'redux-saga/effects'\r\nimport {AxiosRequestConfig, AxiosResponse} from 'axios';\r\nimport {DELETE_TODO, DELETE_TODO_SUCCEED} from \"../../redux/constants\";\r\nimport httpRequest from \"../httpConfig\";\r\n\r\nfunction* deleteTodoWorker(action: DeleteTodoAction) {\r\n\r\n    const httpConfig: AxiosRequestConfig = {\r\n        method: 'DELETE',\r\n        url: `/api/todoList/${action.payload}`,\r\n    }\r\n\r\n    const response: AxiosResponse = yield call(() => httpRequest(httpConfig));\r\n    if (response.status === 200) {\r\n        yield put({\r\n            type: DELETE_TODO_SUCCEED,\r\n            payload: action.payload\r\n        })\r\n    }\r\n}\r\n\r\nexport function* watchDeleteTodo() {\r\n    yield takeEvery(DELETE_TODO, deleteTodoWorker)\r\n} "]},"metadata":{},"sourceType":"module"}