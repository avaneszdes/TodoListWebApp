{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Vladislav Avanesov\\\\RiderProjects\\\\TodoListWebApp\\\\src\\\\TodoListWebApp\\\\ClientApp\\\\src\\\\components\\\\ErrorAlert\\\\ErrorAlert.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Collapse } from \"@material-ui/core\";\nimport { CLEAR_ERROR_MESSAGE } from \"../../redux/constants\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function ErrorAlertComponent() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const errorMessage = useSelector(errorMessage => errorMessage.error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Collapse, {\n      in: Boolean(errorMessage),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"outlined\",\n        severity: \"error\",\n        onClose: () => {\n          dispatch({\n            type: CLEAR_ERROR_MESSAGE,\n            payload: ''\n          });\n        },\n        children: [\" \", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ErrorAlertComponent, \"hoTgbz/V+3gYND0E9r2rfMyFSUM=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = ErrorAlertComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorAlertComponent\");","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/components/ErrorAlert/ErrorAlert.tsx"],"names":["React","makeStyles","createStyles","Alert","useDispatch","useSelector","Collapse","CLEAR_ERROR_MESSAGE","useStyles","theme","root","width","marginTop","spacing","ErrorAlertComponent","classes","dispatch","errorMessage","error","Boolean","type","payload"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAA2BC,YAA3B,QAA8C,0BAA9C;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,mBAAR,QAAkC,uBAAlC;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,IACzBP,YAAY,CAAC;AACTQ,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEF,iBAAa;AACTC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADF;AAFX;AADG,CAAD,CADY,CAA5B;AAYA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC1C,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,YAAoB,GAAGZ,WAAW,CAAEY,YAAD,IAA8BA,YAAY,CAACC,KAA5C,CAAxC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACL,IAAxB;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAES,OAAO,CAACF,YAAD,CAArB;AAAA,6BACQ,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,UAAf;AAA0B,QAAA,QAAQ,EAAC,OAAnC;AAA2C,QAAA,OAAO,EAAE,MAAM;AACtDD,UAAAA,QAAQ,CAAC;AAACI,YAAAA,IAAI,EAAEb,mBAAP;AAA4Bc,YAAAA,OAAO,EAAE;AAArC,WAAD,CAAR;AACH,SAFD;AAAA,wBAEKJ,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAduBH,mB;UACJN,S,EACCJ,W,EACYC,W;;;KAHTS,mB","sourcesContent":["import React from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {IRootState} from \"../../redux/configureStore\";\r\nimport {Collapse} from \"@material-ui/core\";\r\nimport {CLEAR_ERROR_MESSAGE} from \"../../redux/constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            '& > * + *': {\r\n                marginTop: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\n\r\nexport default function ErrorAlertComponent() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const errorMessage: string = useSelector((errorMessage: IRootState) => errorMessage.error)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Collapse in={Boolean(errorMessage)}>\r\n                    <Alert variant=\"outlined\" severity=\"error\" onClose={() => {\r\n                        dispatch({type: CLEAR_ERROR_MESSAGE, payload: ''})\r\n                    }}> {errorMessage}</Alert>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}