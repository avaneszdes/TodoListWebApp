{"ast":null,"code":"import { CHANGE_USER_PASSWORD_SUCCEED, DELETE_USER, EDIT_USER, GET_USERS_SUCCEED } from \"./constants\";\nconst initialState = [];\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_USERS_SUCCEED:\n      return action.payload;\n\n    case DELETE_USER:\n      return state.filter(x => x.id !== action.payload);\n\n    case EDIT_USER:\n      return state.map(x => {\n        if (x.id === action.payload.id) {\n          return action.payload;\n        }\n\n        return x;\n      });\n\n    case CHANGE_USER_PASSWORD_SUCCEED:\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/redux/admin-reducer.ts"],"names":["CHANGE_USER_PASSWORD_SUCCEED","DELETE_USER","EDIT_USER","GET_USERS_SUCCEED","initialState","state","action","type","payload","filter","x","id","map"],"mappings":"AAAA,SAEIA,4BAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,iBALJ,QAMO,aANP;AAUA,MAAMC,YAAoB,GAAG,EAA7B;AAEA,gBAAe,CAACC,KAAK,GAAGD,YAAT,EAAuBE,MAAvB,KAAoD;AAE/D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKJ,iBAAL;AACI,aAAOG,MAAM,CAACE,OAAd;;AAEJ,SAAKP,WAAL;AACI,aAAOI,KAAK,CAACI,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAlC,CAAP;;AAEJ,SAAKN,SAAL;AACI,aAAOG,KAAK,CAACO,GAAN,CAAUF,CAAC,IAAI;AAClB,YAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAP,CAAeG,EAA5B,EAAgC;AAC5B,iBAAOL,MAAM,CAACE,OAAd;AACH;;AACD,eAAOE,CAAP;AACH,OALM,CAAP;;AAMJ,SAAKV,4BAAL;AACI,aAAOK,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAnBR;AAqBH,CAvBD","sourcesContent":["import {\r\n    CHANGE_USER_PASSWORD,\r\n    CHANGE_USER_PASSWORD_SUCCEED,\r\n    DELETE_USER,\r\n    EDIT_USER,\r\n    GET_USERS_SUCCEED\r\n} from \"./constants\";\r\nimport {User} from \"../Components/Interfaces\";\r\nimport {TodosActionTypes} from \"./action\";\r\n\r\nconst initialState: User[] = []\r\n\r\nexport default (state = initialState, action: TodosActionTypes) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_USERS_SUCCEED:\r\n            return action.payload\r\n\r\n        case DELETE_USER:\r\n            return state.filter(x => x.id !== action.payload)\r\n\r\n        case EDIT_USER:\r\n            return state.map(x => {\r\n                if (x.id === action.payload.id) {\r\n                    return action.payload\r\n                }\r\n                return x;\r\n            })\r\n        case CHANGE_USER_PASSWORD_SUCCEED:\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}