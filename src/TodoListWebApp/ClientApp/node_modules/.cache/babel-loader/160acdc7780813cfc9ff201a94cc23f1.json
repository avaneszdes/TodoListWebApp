{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport httpRequest from \"../httpConfig\";\nimport { CHANGE_USER_PASSWORD, GET_ERROR_MESSAGE_SUCCEED } from \"../../redux/constants\";\nimport history from \"../../components/history\";\n\nfunction* changeEmailWorker(action) {\n  const httpConfig = {\n    method: 'POST',\n    url: '/api/user',\n    data: action.payload\n  };\n\n  try {\n    const response = yield call(() => httpRequest(httpConfig));\n    console.log(response);\n\n    if (response.status === 200) {\n      history.push(\"/\");\n      console.log(123);\n    }\n  } catch (e) {\n    var _error$response;\n\n    const error = e;\n    yield put({\n      type: GET_ERROR_MESSAGE_SUCCEED,\n      payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data\n    });\n  }\n}\n\nexport function* watchChangeEmail() {\n  yield takeEvery(CHANGE_USER_PASSWORD, changeEmailWorker);\n}","map":{"version":3,"sources":["C:/Users/Vladislav Avanesov/RiderProjects/TodoListWebApp/src/TodoListWebApp/ClientApp/src/sagas/UserSagas/UpdatePassword.ts"],"names":["call","put","takeEvery","httpRequest","CHANGE_USER_PASSWORD","GET_ERROR_MESSAGE_SUCCEED","history","changeEmailWorker","action","httpConfig","method","url","data","payload","response","console","log","status","push","e","error","type","watchChangeEmail"],"mappings":"AAEA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,oBAAR,EAA8BC,yBAA9B,QAA8D,uBAA9D;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,UAAUC,iBAAV,CAA4BC,MAA5B,EAA+D;AAE3D,QAAMC,UAA8B,GAAG;AACnCC,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,GAAG,EAAE,WAF8B;AAGnCC,IAAAA,IAAI,EAAEJ,MAAM,CAACK;AAHsB,GAAvC;;AAMA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMd,IAAI,CAAC,MAAMG,WAAW,CAACM,UAAD,CAAlB,CAA3B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAGA,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA2B;AACvBX,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACDH,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACF;AACJ,GAPD,CAOE,OAAOG,CAAP,EAAU;AAAA;;AAER,UAAMC,KAAK,GAAGD,CAAd;AACA,UAAMlB,GAAG,CAAC;AAACoB,MAAAA,IAAI,EAAEhB,yBAAP;AAAkCQ,MAAAA,OAAO,qBAAEO,KAAK,CAACN,QAAR,oDAAE,gBAAgBF;AAA3D,KAAD,CAAT;AACH;AACJ;;AAED,OAAO,UAAUU,gBAAV,GAA6B;AAChC,QAAMpB,SAAS,CAACE,oBAAD,EAAuBG,iBAAvB,CAAf;AACH","sourcesContent":["import {ChangeUserPasswordSucceed} from \"../../redux/action\";\r\nimport {AxiosError, AxiosRequestConfig} from \"axios\";\r\nimport {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport httpRequest from \"../httpConfig\";\r\nimport {CHANGE_USER_PASSWORD, GET_ERROR_MESSAGE_SUCCEED} from \"../../redux/constants\";\r\nimport history from \"../../components/history\";\r\n\r\nfunction* changeEmailWorker(action: ChangeUserPasswordSucceed) {\r\n    \r\n    const httpConfig: AxiosRequestConfig = {\r\n        method: 'POST',\r\n        url: '/api/user',\r\n        data: action.payload,\r\n    }\r\n    \r\n    try {\r\n        const response = yield call(() => httpRequest(httpConfig));\r\n        console.log(response)\r\n        if(response.status === 200){\r\n            history.push(\"/\");\r\n           console.log(123)\r\n        }\r\n    } catch (e) {\r\n\r\n        const error = e as AxiosError\r\n        yield put({type: GET_ERROR_MESSAGE_SUCCEED, payload: error.response?.data})\r\n    }\r\n}\r\n\r\nexport function* watchChangeEmail() {\r\n    yield takeEvery(CHANGE_USER_PASSWORD, changeEmailWorker)\r\n}"]},"metadata":{},"sourceType":"module"}