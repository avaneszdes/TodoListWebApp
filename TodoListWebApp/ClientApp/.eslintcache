[{"C:\\Users\\Vladislav\\RiderProjects\\todo-list\\src\\index.tsx":"1","C:\\Users\\Vladislav\\RiderProjects\\todo-list\\src\\Components\\TodoItem\\TodoItem.tsx":"2","C:\\Users\\Vladislav\\RiderProjects\\todo-list\\src\\ToDoList.tsx":"3","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\index.tsx":"4","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\TodoItem\\TodoItem.tsx":"5","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\API.ts":"6","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\configureStore.ts":"7","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\app.tsx":"8","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\TodoList\\ToDoList.tsx":"9","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\constants.ts":"10","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\todos-reducer.ts":"11","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\AddTodo.ts":"12","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\action.ts":"13","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\DeleteTodo.ts":"14","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\CompleteTodo.ts":"15","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\EditTodo.ts":"16","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\root.ts":"17","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\Home\\HomePage.tsx":"18","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\Registration\\Registration.tsx":"19","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\Autorization\\SignIn.tsx":"20","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\GetTodoLIst.ts":"21","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\Registration.ts":"22","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\Authorization.ts":"23","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\auth-reducer.ts":"24"},{"size":191,"mtime":1610396460137,"results":"25","hashOfConfig":"26"},{"size":1053,"mtime":1610451588099,"results":"27","hashOfConfig":"26"},{"size":2553,"mtime":1610452797377,"results":"28","hashOfConfig":"26"},{"size":352,"mtime":1611920759564,"results":"29","hashOfConfig":"30"},{"size":1332,"mtime":1611950032965,"results":"31","hashOfConfig":"30"},{"size":64,"mtime":1611600282569,"results":"32","hashOfConfig":"30"},{"size":726,"mtime":1612183033325,"results":"33","hashOfConfig":"30"},{"size":106,"mtime":1612271000714,"results":"34","hashOfConfig":"30"},{"size":3012,"mtime":1612015911996,"results":"35","hashOfConfig":"30"},{"size":714,"mtime":1612267336866,"results":"36","hashOfConfig":"30"},{"size":1253,"mtime":1612270971657,"results":"37","hashOfConfig":"30"},{"size":616,"mtime":1612271451298,"results":"38","hashOfConfig":"30"},{"size":2263,"mtime":1612269892863,"results":"39","hashOfConfig":"30"},{"size":594,"mtime":1611685368784,"results":"40","hashOfConfig":"30"},{"size":672,"mtime":1611744470615,"results":"41","hashOfConfig":"30"},{"size":646,"mtime":1611821232531,"results":"42","hashOfConfig":"30"},{"size":636,"mtime":1612003716631,"results":"43","hashOfConfig":"30"},{"size":2016,"mtime":1612270919023,"results":"44","hashOfConfig":"30"},{"size":9434,"mtime":1612370456037,"results":"45","hashOfConfig":"30"},{"size":5529,"mtime":1612370622978,"results":"46","hashOfConfig":"30"},{"size":720,"mtime":1612271065290,"results":"47","hashOfConfig":"30"},{"size":578,"mtime":1612179938494,"results":"48","hashOfConfig":"30"},{"size":642,"mtime":1612269495998,"results":"49","hashOfConfig":"30"},{"size":547,"mtime":1612270839442,"results":"50","hashOfConfig":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"19kr129",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1h91rll",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Vladislav\\RiderProjects\\todo-list\\src\\index.tsx",[],["105","106"],"C:\\Users\\Vladislav\\RiderProjects\\todo-list\\src\\Components\\TodoItem\\TodoItem.tsx",[],"C:\\Users\\Vladislav\\RiderProjects\\todo-list\\src\\ToDoList.tsx",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\index.tsx",[],["107","108"],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\TodoItem\\TodoItem.tsx",[],["109","110"],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\API.ts",[],["111","112"],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\configureStore.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\app.tsx",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\TodoList\\ToDoList.tsx",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\constants.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\todos-reducer.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\AddTodo.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\action.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\DeleteTodo.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\CompleteTodo.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\EditTodo.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\root.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\Home\\HomePage.tsx",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\Registration\\Registration.tsx",["113","114"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch} from 'react-redux'\r\nimport {REGISTRATION} from \"../../redux/constants\";\r\nimport SignIn from \"../Autorization/SignIn\";\r\nimport ToDoList from \"../TodoList/ToDoList\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {Formik, useFormik} from 'formik';\r\nimport * as yup from \"yup\";\r\nimport {ref} from \"yup\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\ninterface SignForm {\r\n    firstName: string\r\n    lastName: string\r\n    password: string\r\n    confirmPassword: string,\r\n    email: string\r\n}\r\n\r\ninterface Props {\r\n    pressButton: (isPressed: boolean) => void,\r\n    isPres: boolean\r\n}\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst vScheme = yup.object().shape({\r\n    firstName: yup.string().typeError('must be a string').required('required'),\r\n    lastName: yup.string().typeError('must be a string').required('required'),\r\n    password: yup.string().min(8, 'length must be most than 7').required('required'),\r\n    email: yup.string().email('incorrect email address').required('required'),\r\n    confirmPassword: yup.string().oneOf([ref('password')], 'passwords don`t match').required('required'),\r\n})\r\n\r\nexport default function SignUp({isPres, pressButton}: Props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [isPressed, setPressed] = useState(false)\r\n\r\n    const initialValues: SignForm = {\r\n        firstName: '',\r\n        lastName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        email: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            email: '',\r\n        },\r\n        validationSchema: vScheme,\r\n        onSubmit: (values) => {\r\n            dispatch({type: REGISTRATION, payload: values})\r\n            setPressed(!isPres)\r\n            pressButton(isPressed)\r\n        },\r\n    })\r\n\r\n\r\n    if (!isPressed) {\r\n        return (\r\n\r\n            <Container component=\"main\" maxWidth=\"xl\">\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.firstName && Boolean(formik.errors.firstName)}\r\n                                    value={formik.values.firstName}\r\n                                    helperText={formik.touched.firstName && formik.errors.firstName}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n                                    value={formik.values.lastName}\r\n                                    helperText={formik.touched.lastName && formik.errors.lastName}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                    value={formik.values.email}\r\n                                    helperText={formik.touched.email && formik.errors.email}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                    value={formik.values.password}\r\n                                    helperText={formik.touched.password && formik.errors.password}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"confirmPassword\"\r\n                                    label=\"Confirm Password\"\r\n                                    type=\"confirmPassword\"\r\n                                    id=\"confirmPassword\"\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\r\n                                    value={formik.values.confirmPassword}\r\n                                    helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type='submit'\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"/todo-list\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                                <Route path=\"/todo-list\">\r\n                                    <ToDoList/>\r\n                                </Route>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n\r\n                </div>\r\n                <Box mt={5}>\r\n                    <Copyright/>\r\n                </Box>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    return <SignIn/>\r\n}","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\Components\\Autorization\\SignIn.tsx",["115","116","117"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AUTHORIZATION} from \"../../redux/constants\";\r\nimport {SignForm} from \"../Interfaces\";\r\nimport {useFormik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {ref} from \"yup\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst vScheme = yup.object().shape({\r\n    password: yup.string().min(8, 'length must be most than 7').required('required'),\r\n    email: yup.string().email('incorrect email address').required('required'),\r\n})\r\n\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            email: '',\r\n        },\r\n        validationSchema: vScheme,\r\n        onSubmit: (values) => {\r\n            dispatch({type: AUTHORIZATION, payload: values})\r\n        },\r\n    })\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        value={formik.values.email}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        value={formik.values.password}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright/>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\GetTodoLIst.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\Registration.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\sagas\\Authorization.ts",[],"C:\\Users\\Vladislav\\RiderProjects\\TodoListWebApp\\TodoListWebApp\\ClientApp\\src\\redux\\auth-reducer.ts",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":18,"column":9,"nodeType":"130","messageId":"131","endLine":18,"endColumn":15},{"ruleId":"128","severity":1,"message":"132","line":83,"column":11,"nodeType":"130","messageId":"131","endLine":83,"endColumn":34},{"ruleId":"128","severity":1,"message":"133","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"134","line":17,"column":9,"nodeType":"130","messageId":"131","endLine":17,"endColumn":17},{"ruleId":"128","severity":1,"message":"135","line":20,"column":9,"nodeType":"130","messageId":"131","endLine":20,"endColumn":12},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],["136"],["137"],["136"],["137"],["136"],["137"],"@typescript-eslint/no-unused-vars","'Formik' is defined but never used.","Identifier","unusedVar","'initialValues' is assigned a value but never used.","'useState' is defined but never used.","'SignForm' is defined but never used.","'ref' is defined but never used.","no-global-assign","no-unsafe-negation"]